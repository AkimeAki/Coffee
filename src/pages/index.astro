---
import Layout from "@/layouts/Layout.astro";
import { formatDate } from "@/lib/format-date";
import { getListAllContents } from "@/lib/microcms";
import type { Blog } from "@/lib/microcms";

const posts = await getListAllContents<Blog>("blogs");
---

<Layout ogType="blog">
	<main id="card-wrapper">
		{
			posts.map((post) => (
				<a
					class="post-card"
					href={`/${post.id}`}
					aria-label={`記事『${post.title}』を読む`}
					data-bg-src={post.eyecatch ? `${post.eyecatch.url}?fm=webp` : ""}
				>
					<div class="post-content-wrapper">
						<div class="post-content-bg-image-wrapper">
							<img
								class="post-content-bg-image"
								loading="lazy"
								src={post.eyecatch ? `${post.eyecatch.url}?fm=webp&w=250` : ""}
							/>
						</div>
						<div class="post-content" set:html={post.contents} />
					</div>
					<div>
						<h2 class="post-title">{post.title}</h2>
						<time class="post-date" datetime={post.publishedAt ?? post.createdAt}>
							{formatDate(post.publishedAt ?? post.createdAt)}
						</time>
					</div>
				</a>
			))
		}
	</main>
</Layout>

<style>
	@keyframes rough-notation-dash {
		to {
			stroke-dashoffset: 0;
		}
	}
</style>

<script>
	import { annotate } from "rough-notation";

	const annotation = () => {
		const postCards = document.querySelectorAll<HTMLDivElement>(".post-content-wrapper");
		postCards.forEach((postCard) => {
			const postCardAnnotate = annotate(postCard, { type: "box", color: "#ffd9c6" });
			postCardAnnotate.show();
		});
	};

	annotation();

	document.addEventListener("astro:after-swap", () => {
		annotation();
	});
</script>

<script>
	document.addEventListener(
		"astro:page-load",
		() => {
			const postCards = document.querySelectorAll<HTMLAnchorElement>(".post-card");
			postCards.forEach((postCard) => {
				const loadImage = () => {
					const src = postCard.dataset.bgSrc;
					if (src === undefined) {
						return;
					}

					const image = new Image();
					image.src = src;
				};

				// postCard.addEventListener("touchstart", loadImage);
				postCard.addEventListener("mouseover", loadImage);
				postCard.addEventListener("touchstart", () => {
					const imageWrap = postCard.querySelector<HTMLDivElement>(".post-content-bg-image-wrapper");
					if (imageWrap !== null) {
						imageWrap.style.opacity = "1";
					}
				});

				postCard.addEventListener("touchend", () => {
					const imageWrap = postCard.querySelector<HTMLDivElement>(".post-content-bg-image-wrapper");
					if (imageWrap !== null) {
						imageWrap.style.opacity = "";
					}
				});
			});
		},
		false
	);
</script>

<style lang="scss">
	#card-wrapper {
		width: 100%;
		max-width: 814px;
		margin: 0 auto;
		padding: 25px 25px 100px 25px;
		display: grid;
		grid-template-columns: 1fr 1fr 1fr;
		column-gap: 30px;
		row-gap: 40px;

		@media screen and (max-width: 700px) {
			grid-template-columns: 1fr 1fr;
		}

		@media screen and (max-width: 520px) {
			grid-template-columns: 1fr;
		}

		.post-card {
			position: relative;
			display: flex;
			flex-direction: column;
			gap: 15px;
			text-decoration: none;

			&:hover {
				@media (hover: hover) {
					.post-content-wrapper {
						.post-content-bg-image-wrapper {
							opacity: 1;
						}
					}
				}
			}

			.post-content-wrapper {
				position: relative;
				padding: 30px;
				height: 150px;
				overflow: hidden;

				.post-content-bg-image-wrapper {
					position: absolute;
					top: 0;
					left: 0;
					width: 100%;
					height: 100%;
					user-select: none;
					pointer-events: none;
				}

				.post-content-bg-image-wrapper {
					z-index: -1;
					opacity: 0;
					transition-duration: 400ms;
					transition-property: opacity;

					:global(.post-content-bg-image) {
						width: 100%;
						height: 100%;
						object-fit: cover;
						filter: blur(5px);
					}
				}

				.post-content {
					:global(p) {
						font-size: 5px;
					}
				}
			}

			.post-title {
				font-size: 22px;
				line-height: 25px;
			}

			.post-date {
				font-size: 16px;
			}

			.post-link {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
			}
		}
	}
</style>
